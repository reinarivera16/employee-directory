{"version":3,"sources":["dataStore/DataStore.js","components/Table/TableRow/TableRow.js","components/Table/Table.js","components/Search/Search.js","container/Container.js","App.js","index.js"],"names":["DataStore","axios","get","uri","TableRow","props","src","employee","picture","large","alt","name","first","last","cell","email","Date","dob","date","toLocaleDateString","month","day","year","Table","tR","data","map","cellSpacing","className","onClick","sort","SearchBar","onChange","handleInputChange","value","search","type","placeholder","isSorted","Container","state","employees","database","fetchData","a","users","results","setState","console","error","sortData","key","key2","undefined","b","e","preventDefault","target","filter","fullName","phoneNo","replace","toLowerCase","includes","filteredData","updateResults","this","Search","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAMaA,EACF,WACH,OAAOC,IAAMC,IAAIC,gG,OCeVC,EArBE,SAAAC,GACb,OACI,+BACI,6BACI,qBAAKC,IAAKD,EAAME,SAASC,QAAQC,MAAOC,IAAI,eAEhD,6BAAKL,EAAME,SAASI,KAAKC,QACzB,6BAAKP,EAAME,SAASI,KAAKE,OACzB,6BAAKR,EAAME,SAASO,OACpB,6BAAKT,EAAME,SAASQ,QACpB,6BACK,IAAIC,KAAKX,EAAME,SAASU,IAAIC,MAAMC,mBAAmB,QAAS,CAC3DC,MAAO,UACPC,IAAK,UACLC,KAAM,kBCmDXC,EAhED,SAAAlB,GAEV,IAAMmB,EAAKnB,EAAMoB,KAAKC,KAAI,SAAAnB,GAAQ,OAC9B,cAAC,EAAD,CAA8BA,SAAUA,GAAzBA,EAASO,SAI5B,OACI,wBAAOa,YAAY,IAAnB,UACI,gCACI,+BACI,uBACA,2CAEI,mBACIC,UAAU,cACVC,QAAS,WACLxB,EAAMyB,KAAK,OAAQ,eAI/B,0CAEI,mBACIF,UAAU,cACVC,QAAS,WACLxB,EAAMyB,KAAK,OAAQ,cAI/B,0CAEI,mBACIF,UAAU,cACVC,QAAS,WACLxB,EAAMyB,KAAK,cAIvB,uCAEI,mBACIF,UAAU,cACVC,QAAS,WACLxB,EAAMyB,KAAK,eAIvB,qCAEI,mBACIF,UAAU,cACVC,QAAS,WACLxB,EAAMyB,KAAK,MAAO,mBAMtC,gCAAQN,QC7CLO,EAfG,SAAA1B,GACd,OACI,sBAAMuB,UAAU,cAAhB,SACI,uBACIA,UAAU,SACVI,SAAU3B,EAAM4B,kBAChBC,MAAO7B,EAAM8B,OACbxB,KAAK,SACLyB,KAAK,OACLC,YAAY,8BCNxBC,GAAW,EAoGAC,E,4MAjGXC,MAAQ,CACJC,UAAW,GACXC,SAAU,GACVP,OAAQ,I,EAOZQ,U,sBAAY,8BAAAC,EAAA,+EAEgB5C,IAFhB,OAEE6C,EAFF,OAGIC,EAAYD,EAAMpB,KAAlBqB,QACR,EAAKC,SAAS,CAAEN,UAAWK,EAASJ,SAAUI,IAJ1C,gDAMJE,QAAQC,MAAR,MANI,yD,EAUZC,SAAW,SAACC,EAAKC,GACTd,OACae,IAATD,EACA,EAAKL,SACD,EAAKP,MAAMC,UAAUX,MAAK,SAACc,EAAGU,GAAJ,OACtBV,EAAEO,GAAOG,EAAEH,GAAO,GAAK,MAI/B,EAAKJ,SACD,EAAKP,MAAMC,UAAUX,MAAK,SAACc,EAAGU,GAAJ,OACtBV,EAAEO,GAAKC,GAAQE,EAAEH,GAAKC,GAAQ,GAAK,WAKlCC,IAATD,EACA,EAAKL,SACD,EAAKP,MAAMC,UAAUX,MAAK,SAACc,EAAGU,GAAJ,OACtBV,EAAEO,GAAOG,EAAEH,IAAQ,EAAI,MAI/B,EAAKJ,SACD,EAAKP,MAAMC,UAAUX,MAAK,SAACc,EAAGU,GAAJ,OACtBV,EAAEO,GAAKC,GAAQE,EAAEH,GAAKC,IAAS,EAAI,MAMnDd,GAAYA,G,EAGhBL,kBAAoB,SAAAsB,GAChBA,EAAEC,iBADmB,MAGGD,EAAEE,OAAlB9C,EAHa,EAGbA,KAAMuB,EAHO,EAGPA,MACNQ,EAAa,EAAKF,MAAlBE,SAER,EAAKK,SAAL,eAAiBpC,EAAOuB,IAEL,uCAAG,4BAAAU,EAAA,sEACZ,EAAKG,SAAS,CAAEN,UAAWC,IADf,uBAGO,EAAKF,MAAMC,UAAUiB,QAAO,SAAAvB,GACjD,IAAMwB,EAAQ,UAAMxB,EAAOxB,KAAKC,MAAlB,YAA2BuB,EAAOxB,KAAKE,MAC/C+C,EAAUzB,EAAOrB,KAAK+C,QAAQ,SAAU,IAE9C,OACIF,EACKG,cACAC,SAAS,EAAKvB,MAAML,OAAO2B,gBAChCF,EAAQG,SAAS,EAAKvB,MAAML,WAXlB,OAGd6B,EAHc,OAelB,EAAKjB,SAAS,CAAEN,UAAWuB,IAfT,2CAAH,oDAkBnBC,I,uDA1EJ,WACIC,KAAKvB,c,oBA4ET,WACI,OACI,sBAAKf,UAAU,cAAf,UACI,qBAAKA,UAAU,SAAf,gCACA,cAACuC,EAAD,CACIhC,OAAQ+B,KAAK1B,MAAML,OACnBF,kBAAmBiC,KAAKjC,oBAE5B,cAAC,EAAD,CAAOR,KAAMyC,KAAK1B,MAAMC,UAAWX,KAAMoC,KAAKhB,kB,GA5FtCkB,a,MCATC,MAJf,WACI,OAAO,cAAC,EAAD,KCAXC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.f68ad3c9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst uri = \"https://randomuser.me/api/\";\r\nconst params =\r\n    \"?results=50&nat=us&exc=gender,location,login,registered,phone,nat\";\r\n\r\nexport const DataStore = {\r\n    fetch: function () {\r\n        return axios.get(uri + params);\r\n    },\r\n};\r\n","import React from \"react\";\r\n\r\nconst TableRow = props => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <img src={props.employee.picture.large} alt=\"employee\" />\r\n            </td>\r\n            <td>{props.employee.name.first}</td>\r\n            <td>{props.employee.name.last}</td>\r\n            <td>{props.employee.cell}</td>\r\n            <td>{props.employee.email}</td>\r\n            <td>\r\n                {new Date(props.employee.dob.date).toLocaleDateString(\"en-US\", {\r\n                    month: \"2-digit\",\r\n                    day: \"2-digit\",\r\n                    year: \"numeric\",\r\n                })}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\nimport TableRow from \"./TableRow/TableRow\";\r\n\r\nconst Table = props => {\r\n    // Map the data from the API and assign it to a var to be rendered\r\n    const tR = props.data.map(employee => (\r\n        <TableRow key={employee.cell} employee={employee} />\r\n    ));\r\n\r\n    // Render the table with the mapped rows of employee data\r\n    return (\r\n        <table cellSpacing=\"0\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>\r\n                        Firstname\r\n                        <i\r\n                            className=\"fas fa-sort\"\r\n                            onClick={() => {\r\n                                props.sort(\"name\", \"first\");\r\n                            }}\r\n                        ></i>\r\n                    </th>\r\n                    <th>\r\n                        Lastname\r\n                        <i\r\n                            className=\"fas fa-sort\"\r\n                            onClick={() => {\r\n                                props.sort(\"name\", \"last\");\r\n                            }}\r\n                        ></i>\r\n                    </th>\r\n                    <th>\r\n                        Phone No\r\n                        <i\r\n                            className=\"fas fa-sort\"\r\n                            onClick={() => {\r\n                                props.sort(\"cell\");\r\n                            }}\r\n                        ></i>\r\n                    </th>\r\n                    <th>\r\n                        Email\r\n                        <i\r\n                            className=\"fas fa-sort\"\r\n                            onClick={() => {\r\n                                props.sort(\"email\");\r\n                            }}\r\n                        ></i>\r\n                    </th>\r\n                    <th>\r\n                        DOB\r\n                        <i\r\n                            className=\"fas fa-sort\"\r\n                            onClick={() => {\r\n                                props.sort(\"dob\", \"date\");\r\n                            }}\r\n                        ></i>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{tR}</tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst SearchBar = props => {\r\n    return (\r\n        <form className=\"search-form\">\r\n            <input\r\n                className=\"search\"\r\n                onChange={props.handleInputChange}\r\n                value={props.search}\r\n                name=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search by Name & Phone\"\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport { DataStore } from \"../dataStore/DataStore\";\r\nimport Table from \"../components/Table/Table\";\r\nimport Search from \"../components/Search/Search\";\r\n\r\nlet isSorted = true;\r\n\r\nclass Container extends Component {\r\n    state = {\r\n        employees: [],\r\n        database: [],\r\n        search: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData = async () => {\r\n        try {\r\n            const users = await DataStore.fetch();\r\n            const { results } = users.data;\r\n            this.setState({ employees: results, database: results });\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    sortData = (key, key2) => {\r\n        if (isSorted) {\r\n            if (key2 === undefined) {\r\n                this.setState(\r\n                    this.state.employees.sort((a, b) =>\r\n                        a[key] > b[key] ? 1 : -1\r\n                    )\r\n                );\r\n            } else {\r\n                this.setState(\r\n                    this.state.employees.sort((a, b) =>\r\n                        a[key][key2] > b[key][key2] ? 1 : -1\r\n                    )\r\n                );\r\n            }\r\n        } else {\r\n            if (key2 === undefined) {\r\n                this.setState(\r\n                    this.state.employees.sort((a, b) =>\r\n                        a[key] > b[key] ? -1 : 1\r\n                    )\r\n                );\r\n            } else {\r\n                this.setState(\r\n                    this.state.employees.sort((a, b) =>\r\n                        a[key][key2] > b[key][key2] ? -1 : 1\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\r\n        isSorted = !isSorted;\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, value } = e.target;\r\n        const { database } = this.state;\r\n\r\n        this.setState({ [name]: value });\r\n\r\n        const updateResults = async () => {\r\n            await this.setState({ employees: database });\r\n\r\n            let filteredData = await this.state.employees.filter(search => {\r\n                const fullName = `${search.name.first} ${search.name.last}`;\r\n                const phoneNo = search.cell.replace(/[()-]/g, \"\");\r\n\r\n                return (\r\n                    fullName\r\n                        .toLowerCase()\r\n                        .includes(this.state.search.toLowerCase()) ||\r\n                    phoneNo.includes(this.state.search)\r\n                );\r\n            });\r\n\r\n            this.setState({ employees: filteredData });\r\n        };\r\n\r\n        updateResults();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-users\">\r\n                <div className=\"header\">Employee Directory</div>\r\n                <Search\r\n                    search={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n                <Table data={this.state.employees} sort={this.sortData} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;\r\n","import Container from \"./container/Container\";\nimport \"./App.css\";\n\nfunction App() {\n    return <Container />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}